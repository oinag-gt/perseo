version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: perseo-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: perseo
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: perseo-redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ./packages/api/Dockerfile
      target: development
    container_name: perseo-api
    restart: always
    ports:
      - '3001:3001'
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: perseo
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./packages/api:/app/packages/api
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
      - /app/packages/api/node_modules
      - /app/packages/shared/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev --workspace=@perseo/api

  web:
    build:
      context: .
      dockerfile: ./packages/web/Dockerfile
      target: development
    container_name: perseo-web
    restart: always
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001/api/v1
    volumes:
      - ./packages/web:/app/packages/web
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
      - /app/packages/web/node_modules
      - /app/packages/shared/node_modules
    depends_on:
      - api
    command: npm run dev --workspace=@perseo/web

volumes:
  postgres_data:
  redis_data: